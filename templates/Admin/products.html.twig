{% extends 'Admin/layout.html.twig' %}
{% block meta_decription %}
    {{ parent() }}
{% endblock %}
{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block content %}
    <form name="products_form" id="products_form" method="post" enctype="multipart/form-data">
        <input type="hidden" name="product_id" id="product_id" value="{{ product_id ? product.id : 0 }}">
        <input
            type="hidden"
            name="stock"
            id="stock"
            value="{{ product.stockCount|default(0) }}"
        >
        <input
            type="hidden"
            name="price"
            id="price"
            value="{{ product.unitPrice|default(0.00) }}"
        >
        <section class="content-header border-bottom ps-4 py-4 admin-header">
            <div class="row w-100">
                <div class="col-12 col-md-6 text-truncate">
                    <h4 class="text-truncate">
                        {% if product_id > 0 %}
                            Editing <b>{{ product.name }}</b>
                        {% else %}
                            New Product
                        {% endif %}
                    </h4>
                </div>
                <div class="col-12 col-md-6">
                    {% if app.request.get('productId') > 0 %}
                    <button
                            class="action-saveAndClone btn btn-primary action-save w-sm-100 mb-3 mb-sm-0 float-end text-truncate"
                            type="button"
                            name="save_clone"
                            id="clone"
                            data-product-id="{{ app.request.get('productId') }}"
                    >
                        <span class="btn-label">
                            <i class="fa-light fa-clone"></i>
                            Duplicate
                        </span>
                    </button>
                    {% endif %}
                    <button
                        class="action-saveAndReturn btn btn-primary action-save w-sm-100 mb-3 mb-sm-0 me-0 me-md-3 float-end text-truncate"
                        type="submit"
                        name="save_return"
                    >
                        <span class="btn-label">

                            Save and exit
                        </span>
                    </button>
                    <button
                        class="action-saveAndContinue btn btn-secondary action-save w-sm-100 mb-3 mb-sm-0 me-0 me-md-3 float-end text-truncate"
                        type="submit"
                        name="save_continue"
                    >
                        <span class="btn-label">
                            <i class="action-icon far fa-edit"></i>
                            Save
                        </span>
                    </button>
                </div>
            </div>
        </section>

        <section class="px-4" style="margin-top: 105px">
            <div class="row mt-4">

                {# Is Published #}
                <div class="col-12 col-md-6">
                    <div class="form-check form-switch">
                        {% set is_published = '' %}
                        {% if product.isPublished == 1 %}
                            {% set is_published = 'checked' %}
                        {% endif %}
                        <input
                            name="is-published"
                            id="is_published"
                            class="form-check-input"
                            type="checkbox"
                            role="switch"
                            value="1"
                            tabindex="1"
                            {{ is_published }}
                        >
                        <label class="ms-2 text-primary" for="is_published">
                            Published
                        </label>
                    </div>
                </div>

                {# Expiry Date #}
                <div class="col-12 col-md-6">
                    <div class="form-check form-switch">
                        {% set expiry_date = '' %}
                        {% if product.expiryDateRequired == 1 %}
                            {% set expiry_date = 'checked' %}
                        {% endif %}
                        <input
                            name="expiry-date"
                            id="expiry_date"
                            class="form-check-input"
                            type="checkbox"
                            role="switch"
                            value="1"
                            tabindex="2"
                            {{ expiry_date }}
                        >
                        <label class="ms-2 text-primary" for="expiry_date">
                            Expiry Date
                        </label>
                    </div>
                </div>
            </div>

            {# Name + Manufacturers #}
            <div class="row mt-4">

                {# Name #}
                <div class="col-12 col-md-6">
                    <label for="name" class="text-primary mb-2">Name <span class="text-danger">*</span> </label>
                    <input
                        type="text"
                        class="form-control"
                        name="name"
                        id="name"
                        value="{{ product.name }}"
                        placeholder="Name"
                        tabindex="3"
                    >
                    <div class="hidden_msg" id="error_name">
                        Required Field
                    </div>
                </div>

                {# Manufacturers #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Manufacturer <span class="text-danger">*</span> </label>
                    <div class="position-relative" id="manufacturer_container">
                        <div
                            class="form-control cursor-text text-placeholder"
                            id="manufacturer"
                            tabindex="4"
                        >
                            {% if productManufacturers|length > 0 %}
                                {% for manufacturer in productManufacturers %}
                                    <span class="badge bg-disabled me-3 my-1" id="manufacturer_badge_{{ manufacturer.manufacturers.id }}">
                                        <span id="manufacturer_badge_string_{{ manufacturer.manufacturers.id }}">
                                            {{ nzo_decrypt(manufacturer.manufacturers.name) }}
                                        </span>
                                    </span>
                                {% endfor %}
                            {% else %}
                                Select a Manufacturer
                            {% endif %}
                        </div>
                        <div id="manufacturers_list" class="row" style="display: none">
                            {% if productManufacturers|length > 0 %}
                                {% for manufacturer in productManufacturers %}
                                    <input
                                        type="hidden"
                                        name="manufacturers[]"
                                        class="manufacturer-hidden"
                                        data-name="{{ nzo_decrypt(manufacturer.manufacturers.name) }}"
                                        id="manufacturer_hidden_field_{{ manufacturer.manufacturers.id }}"
                                        value="{{ manufacturer.manufacturers.id }}"
                                    >
                                {% endfor %}
                            {% endif %}
                            <div id="manufacturer_list_container">
                                {{ manufacturersList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_manufacturer">
                            Required Field
                        </div>
                    </div>
                </div>
            </div>

            {# Species + Category1 #}
            <div class="row mt-4">

                {# Species #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Species <span class="text-danger">*</span> </label>
                    <div class="position-relative">
                        <div
                                class="form-control cursor-text text-placeholder"
                                id="species"
                                tabindex="5"
                        >
                            {% if productSpecies|length > 0 %}
                                {% for species in productSpecies %}
                                    <span class="badge bg-disabled me-3 my-1" id="species_badge_{{ species.species.id }}">
                                        <span id="manufacturer_badge_string_{{ species.species.id }}">
                                            {{ species.species.name }}
                                        </span>
                                    </span>
                                {% endfor %}
                            {% else %}
                                Select a Species
                            {% endif %}
                        </div>
                        <div id="species_list" class="row" style="display: none">
                            {% if productSpecies|length > 0 %}
                                {% for species in productSpecies %}
                                    <input
                                        type="hidden"
                                        name="species[]"
                                        class="species-hidden"
                                        data-name="{{ species.species.name }}"
                                        id="species_hidden_field_{{ species.species.id }}"
                                        value="{{ species.species.id }}"
                                    >
                                {% endfor %}
                            {% endif %}
                            <div id="species_list_container">
                                {{ speciesList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_species">
                            Required Field
                        </div>
                    </div>
                </div>

                {# Category #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Category <span class="text-danger">*</span> </label>
                    <div class="position-relative">
                        <div
                            class="form-control cursor-text text-placeholder"
                            id="category"
                            tabindex="6"
                        >
                            {% if product.category is not null %}
                                <span class="badge bg-disabled me-3 my-1" id="category_badge_{{ product.category.id }}">
                                    <span id="category_badge_string_{{ product.category.id }}">
                                        {{ product.category.name }}
                                    </span>
                                </span>
                            {% else %}Select a Category{% endif %}
                        </div>
                        <div id="categories_list" class="row" style="display: none">
                            {% set categoryId = 0 %}
                            {% set category = '' %}
                            {% if product.category is not null %}
                                {% set categoryId = product.category.id %}
                                {% set category = product.category.name %}
                            {% endif %}
                                <input
                                    type="hidden"
                                    name="category-id"
                                    id="category_id"
                                    class="category_hidden"
                                    data-name="{{ category }}"
                                    value="{{ categoryId }}"
                                >
                            <div id="category_list_container">
                                {{ categoriesList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_category">
                            Required Field
                        </div>
                    </div>
                </div>
            </div>

            {# Category2 + Category3 #}
            <div class="row mt-4">

                {# Category2 #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Child Category <span class="text-danger">*</span> </label>
                    <div class="position-relative">
                        <div
                                class="form-control cursor-text text-placeholder"
                                id="sub_category"
                                tabindex="7"
                        >
                            {% if product.category2 is not null %}
                                <span class="badge bg-disabled me-3 my-1" id="sub_category_badge_{{ product.category2.id }}">
                                    <span id="sub_category_badge_string_{{ product.category2.id }}">
                                        {{ product.category2.name }}
                                    </span>
                                </span>
                            {% else %}
                                Select a Child Category
                            {% endif %}
                        </div>
                        <div id="sub_category_list" class="row" style="display: none">
                            {% set subCategoryId = 0 %}
                            {% set subCategory = '' %}
                            {% if product.category2 is not null %}
                                {% set subCategoryId = product.category2.id %}
                                {% set subCategory = product.category2.name %}
                            {% endif %}
                            <input
                                type="hidden"
                                name="sub-category-id"
                                id="sub_category_id"
                                class="sub-category-hidden"
                                data-name="{{ subCategory }}"
                                value="{{ subCategoryId }}"
                            >
                            <div id="sub_category_list_container">
                                {{ subCategoriesList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_sub_category">
                            Required Field
                        </div>
                    </div>
                </div>

                {# Category3 #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Grandchild Category</label>
                    <div class="position-relative">
                        <div
                            class="form-control cursor-text text-placeholder"
                            id="category3"
                            tabindex="8"
                        >
                            {% if product.category3 is not null %}
                                <span class="badge bg-disabled me-3 my-1" id="category3_badge_{{ product.category3.id }}">
                                    <span id="category3_badge_string_{{ product.category3.id }}">
                                        {{ product.category3.name }}
                                    </span>
                                </span>
                            {% else %}
                                Select a Grandchild Category
                            {% endif %}
                        </div>
                        <div id="categories3_list" class="row" style="display: none">
                            {% set category3Id = 0 %}
                            {% set category3 = '' %}
                            {% if product.category3 is not null %}
                                {% set category3Id = product.category3.id %}
                                {% set category3 = product.category3.name %}
                            {% endif %}
                            <input
                                type="hidden"
                                name="category3-id"
                                id="category3_id"
                                class="category3_hidden"
                                data-name="{{ category3 }}"
                                value="{{ category3Id }}"
                            >
                            <div id="category3_list_container">
                                {{ categories3List|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_category3">
                            Required Field
                        </div>
                    </div>
                </div>
            </div>

            {# Dosage + Dosage Unit #}
            <div class="row mt-4">

                {# Dosage #}
                <div class="col-12 col-md-6">
                    <label for="dosage" class="text-primary mb-2">Dosage</label>
                    <input
                        type="text"
                        class="form-control"
                        name="dosage"
                        id="dosage"
                        value="{{ product.dosage }}"
                        placeholder="e.g: 22.7"
                        tabindex="9"
                    >
                    <div class="hidden_msg" id="error_dosage">
                        Required Field
                    </div>
                </div>

                {# Dosage Unit #}
                <div class="col-12 col-md-6">
                    <label for="dosage_unit" class="text-primary mb-2">Dosage Unit</label>
                    <input
                        type="text"
                        class="form-control"
                        name="dosage-unit"
                        id="dosage_unit"
                        value="{{ product.dosageUnit }}"
                        placeholder="e.g: mg"
                        tabindex="10"
                    >
                    <div class="hidden_msg" id="error_dosage_unit">
                        Required Field
                    </div>
                </div>
            </div>

            {# Size + Size Unit #}
            <div class="row mt-4">

                {# Size #}
                <div class="col-12 col-md-6">
                    <label for="size" class="text-primary mb-2">Size <span class="text-danger">*</span></label>
                    <input
                        type="text"
                        class="form-control"
                        name="size"
                        id="size"
                        value="{{ product.size }}"
                        placeholder="Product Size"
                        tabindex="11"
                    >
                    <div class="hidden_msg" id="error_size">
                        Required Field
                    </div>
                </div>

                <div class="col-12 col-md-6">
                    <label for="unit" class="text-primary mb-2">Size Unit </label>
                    <input
                        type="text"
                        class="form-control"
                        name="unit"
                        id="unit"
                        value="{{ product.unit }}"
                        placeholder="e.g: mg"
                        tabindex="12"
                    >
                    <div class="hidden_msg" id="error_unit">
                        Required Field
                    </div>
                </div>
            </div>

            {# Form + Tags #}
            <div class="row mt-4">

                {# Form #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Form <span class="text-danger">*</span> </label>
                    <div class="position-relative">
                        <div
                            class="form-control cursor-text text-placeholder multi-select"
                            id="forms"
                            tabindex="13"
                        >
                            {% if product.form is not null %}
                                <span class="badge bg-disabled me-3 my-1" data-form="{{ product.form }}">
                                    {{ product.form }}
                                </span>
                            {% else %}
                                Select a Form
                            {% endif %}
                        </div>
                        <div class="row" id="forms_list" style="display: none">
                            {% set formValue = '' %}
                            {% if product.form is not null %}
                                {% set formValue = product.form %}
                            {% endif %}
                            <input
                                type="hidden"
                                name="form"
                                class="form_hidden"
                                value="{{ formValue }}"
                            >
                            <div id="forms_list_container">
                                {{ formList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_forms">
                            Required Field
                        </div>
                    </div>
                </div>

                {# Tags #}
                <div class="col-12 col-md-6">
                    <label class="text-primary mb-2">Tags <span class="text-danger">*</span> </label>
                    <div class="position-relative">
                        <div
                            class="form-control cursor-text text-placeholder multi-select tag"
                            tabindex="14"
                        >
                            {% if selectedTags|length > 0 %}
                                {% for key, tag in selectedTags %}
                                    <span class="badge bg-disabled me-3 my-1" data-tag-id="{{ tag }}">
                                        {{ key }}
                                    </span>
                                {% endfor %}
                            {% else %}
                                Select Tags
                            {% endif %}
                        </div>
                        <div class="row tag_list" style="display: none">
                            {% if selectedTags|length > 0 %}
                                {% for key,tag in selectedTags %}
                                    <input
                                        type="hidden"
                                        name="tag[]"
                                        class="tag_hidden"
                                        data-name="{{ key }}"
                                        value="{{ tag }}"
                                        data-tag-hidden-id="{{ tag }}"
                                    >
                                {% endfor %}
                            {% endif %}
                            <div id="tag_list_container">
                                {{ tagList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_subCategory">
                            Required Field
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">

                {# Active Ingredient #}
                <div class="col-12 col-md-6">
                    <label for="active_ingredient" class="text-primary mb-2">Active Ingredient</label>
                    <div class="position-relative">
                        <div
                            class="form-control cursor-text text-placeholder multi-select"
                            id="ingredient"
                            tabindex="15"
                        >
                            {% if selectedIngredients|count > 0 %}
                                {% for key, ingredient in selectedIngredientsTwig %}
                                    <span
                                        class="badge bg-disabled me-3 my-1"
                                        id="ingredient_badge_{{ key }}"
                                        data-ingredient="{{ ingredient }}"
                                    >
                                        {{ ingredient }}
                                    </span>
                                {% endfor %}
                            {% else %}
                                Select an Active Ingredient
                            {% endif %}
                        </div>
                        <div class="row" id="ingredient_list" style="display: none">
                            {% set formValue = '' %}
                            {% if product.form is not null %}
                                {% set formValue = product.form %}
                            {% endif %}
                            <div id="ingredient_list_container">
                                {% if selectedIngredientsTwig|count > 0 %}
                                    {% for key, ingredient in selectedIngredientsTwig %}
                                        <input
                                            type="hidden"
                                            name="ingredient[]"
                                            class="ingredient_hidden"
                                            data-name="{{ ingredient }}"
                                            value="{{ ingredient }}"
                                            id="ingredient_hidden_{{ key }}"
                                            data-ingredient-id="{{ key }}"
                                        >
                                    {% endfor %}
                                {% endif %}
                                {{ activeIngredientList|raw }}
                            </div>
                        </div>
                        <div class="hidden_msg" id="error_active_ingredient">
                            Required Field
                        </div>
                    </div>
                </div>
            </div>

            {# Images #}
            <div class="row mt-4">

                {# Image #}
                <div class="col-11 col-md-5">
                    <label for="video" class="text-primary mb-2">Image</label>
                    <input
                        type="file"
                        class="form-control"
                        name="image"
                        id="image"
                        tabindex="15"
                    >
                    <input
                        type="text"
                        class="form-control"
                        name="video"
                        id="video"
                        style="display: none"
                        placeholder="Video Link eg: https://www.youtube.com/embed/4pb5HUYgh-E"
                    >
                </div>
                <div class="col-1">
                    <label class="mb-3 w-100">&nbsp;</label>
                    <a href="" id="gallery_toggle" style="display: none">
                        <i class="fa-solid fa-arrow-right-arrow-left"></i>
                    </a>
                </div>

                <div class="col-12 col-md-6" id="images_container">
                    <label class="w-100 mb-2">&nbsp;</label>
                    {% for image in product.productImages %}
                        {% set class = '' %}
                        {% if image.isDefault == 1 %}
                            {% set class = 'text-success' %}
                        {% endif %}
                        <div class="row" id="image_{{ image.id }}">
                            <div class="col-10">

                                {% if image.fileType == 1 or image.fileType == 3 %}
                                <a
                                    href=""
                                    data-bs-toggle="modal"
                                    data-bs-target="#modal_image_{{ image.id }}"
                                >
                                    {{ image.image }}
                                </a>
                                {% elseif image.fileType == 2 %}
                                    <a
                                        href="{{ path('product_download', {'fileId': image.id}) }}"
                                    >
                                        {{ image.image }}
                                    </a>
                                {% endif %}
                            </div>
                            <div class="col-2">
                                <span
                                    class="delete-image float-end"
                                    data-image-id="{{ image.id }}"
                                    role="button"
                                >
                                    <i class="fa-solid fa-xmark text-danger fw-bold"></i>
                                </span>
                                {% if image.fileType == 1 %}
                                <span
                                    class="float-end me-3 is-default-image {{ class }}"
                                    data-image-id="{{ image.id }}"
                                    data-product-id="{{ product.id }}"
                                    id="is_default_image_{{ image.id }}"
                                    role="button"
                                >
                                    <i class="fa-solid fa-check-double"></i>
                                </span>
                                {% endif %}
                            </div>
                        </div>
                        {% set modal_body = '' %}
                        {% set modal_size = '' %}
                        {% if image.fileType == 1 %}
                            {% set modal_body = '<img src="../../images/products/'~ image.image ~'" class="img-fluid">' %}
                        {% elseif image.fileType == 3 %}
                            {% set modal_size = 'modal-lg' %}
                            {% set modal_body = '
                                <div class="ratio ratio-16x9">
                                    <iframe class="embed-responsive-item"
                                        src="'~ image.image ~'"
                                        id="video"
                                        allowscriptaccess="always"
                                        allow="autoplay">
                                    </iframe>
                                </div>'
                            %}
                        {% endif %}

                        <!-- Modal Image -->
                        <div class="modal fade" id="modal_image_{{ image.id }}" tabindex="-1" aria-labelledby="image_label" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered {{ modal_size }}">
                                <div class="modal-content">
                                    <button type="button" class="btn-close flash-close" data-bs-dismiss="modal" aria-label="Close" style="z-index: 999999999"></button>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-12 mb-0 text-center">
                                                {{ modal_body|raw }}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            {# Details #}
            <div class="row mt-4">

                <div class="col-12">
                    <label for="details" class="text-primary mb-2">Description</label>
                    <textarea
                        class="form-control"
                        name="details"
                        id="details"
                        tabindex="16"
                    >{{ product.description }}</textarea>
                    <div class="hidden_msg" id="error_details">
                        Required Field
                    </div>
                </div>
            </div>

        </section>
    </form>
{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script>

        $(document).ready(function (){

            // Set is published as active element
            $('#is_published').focus();

            {# Save Products #}
            {% set productId = app.request.get('productId') %}
            if('{{ productId }}' > 0){

                $('#gallery_toggle').show();
            }

            $(document).on('submit', '#products_form', function (e){

                e.preventDefault();

                let manufacturer = $('.manufacturer-hidden').length;
                let name = $('#name').val();
                let species = $('.species-hidden').length;
                let categoryId = $('#category_id').val();
                let subCategory = $('#sub_category').text().trim();
                let subCategoryId = $('#sub_category_id').val();
                let size = $('#size').val();
                let form = $('.form_hidden').val();
                let details = $('#details').val();
                let isValid = true;
                let btn = document.activeElement.getAttribute('name');

                let errorManufacturer = $('#error_manufacturer');
                let errorName = $('#error_name');
                let errorSpecies = $('#error_species');
                let errorCategory = $('#error_category');
                let errorSubCategory = $('#error_sub_category');
                let errorSize = $('#error_size');
                let errorForm = $('#error_forms');
                let errorDetails = $('#error_details');

                errorManufacturer.hide();
                errorName.hide();
                errorSpecies.hide();
                errorCategory.hide();
                errorSubCategory.hide();
                errorSize.hide();
                errorForm.hide();
                errorDetails.hide();

                if(manufacturer == 0){

                    errorManufacturer.show();
                    isValid = false;
                }

                if(name == '' || name == 'undefined'){

                    errorName.show();
                    isValid = false;
                }

                if(species == 0){

                    errorSpecies.show();
                    isValid = false;
                }

                if(categoryId == 0){

                    errorCategory.show();
                    isValid = false;
                }

                if((subCategory == 'Select a Child Category' || subCategory == 'undefined' || subCategory == '') && subCategoryId > 0){

                    errorSubCategory.show();
                    isValid = false;
                }

                if(size == '' || size == 'undefined'){

                    errorSize.show();
                    isValid = false;
                }

                if(form == '' || form == 'undefined'){

                    errorForm.show();
                    isValid = false;
                }

                if(details == '' || details == 'undefined'){

                    errorDetails.show();
                    isValid = false;
                }

                if(isValid) {

                    let data = new FormData(this);

                    $.ajax({
                        url: "{{ path('product_crud') }}",
                        type: 'POST',
                        contentType: false,
                        processData: false,
                        cache: false,
                        timeout: 600000,
                        dataType: 'json',
                        data: data,
                        beforeSend: function (){
                            toggleDropdowns('');
                            isLoading(true);
                        },
                        {#complete: function(e){#}
                        {#    if(e.status === 500){#}
                        {#        window.location.href = '{{ path('admin_error_500') }}';#}
                        {#    }#}
                        {#},#}
                        success: function (response) {

                            getFlash(response.flash);
                            isLoading(false);
                            $('#video').val('');
                            $('#image').val('');
                            $('.content-header-title').empty().append('<h4>Editing '+ response.product +'</h4>');
                            $('#images_container').empty().append(response.images);
                            $('#gallery_toggle').show();

                            if(btn == 'save_return'){

                                window.location.assign('{{ path('products_list',{ 'page_id':1 }) }}');
                            }
                        }
                    });
                }
            });
            $(document).on('click', '.is-default-image', function (){

                let productId = $(this).attr('data-product-id');
                let imageId = $(this).attr('data-image-id');

                $.ajax({
                    url: "{{ path('product_default_image') }}",
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        product_id:productId,
                        image_id:imageId
                    },
                    success: function () {

                        $('.is-default-image').removeClass('text-success');
                        $('#is_default_image_'+ imageId).addClass('text-success');
                    }
                });
            });
            $(document).on('click', '#gallery_toggle', function (e){

                e.preventDefault();

                $('#image').val('').toggle();
                $('#video').val('').toggle();
            });
            $(document).on('click', '#clone', function (e) {

                e.preventDefault();

                let productId = $(this).attr('data-product-id');

                if(productId > 0 && productId != null)
                {
                    $.ajax({
                        url: "{{ path('duplicate_product') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'product-id': productId,
                        },
                        success: function (response) {

                            if(response > 0)
                            {
                                window.location.href = '/admin/product/'+ response;
                            }
                        }
                    });
                }
            });
            {# End Save Products #}

            {# Manufacturers Dropdown #}
            let selected = [];
            let array = [{{ arr }}];
            let isManufacturerClick = false;
            let isCategoryClick = false;
            let isCategory2Click = false;
            let isCategory3Click = false;
            let isSpeciesClick = false;
            let isTagClick = false;
            let isFormClick = false;
            let isActiveIngredientClick = false;

            for(let i = 0; i < array[0].length; i++){

                selected.push(parseInt(array[0][i]));
            }

            $(document).on('mousedown focus', '#manufacturer', function (e){

                toggleDropdowns('manufacturers');

                if(e.type == 'mousedown'){

                    $('#manufacturers_list').slideToggle(700);
                    isManufacturerClick = true;
                }

                if(!isManufacturerClick){

                    $('#manufacturers_list').show(700);
                }
            });
            $(document).on('keydown', '#manufacturer', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#manufacturers_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.manufacturer-row:first').find('.select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.select-row', function (e) {

                e.preventDefault();
                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-manufacturer').parent().prev().find('.select-row');

                    if($(this).closest('.edit-manufacturer').parent().is(':first-child')){

                        $('#manufacturer').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-manufacturer').parent().next().find('.select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="5"]').focus();

                    // Tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="5"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#manufacturers_list').hide(700);
                }
            })
            $(document).on('click', '.manufacturer-edit-icon', function (e){

                e.preventDefault();

                let manufacturerId = $(this).data('manufacturer-edit-id');
                $.session.set('manufacturer', $('#manufacturer_edit_field_'+ manufacturerId).val());

                $('#manufacturer_edit_field_'+ manufacturerId).show();
                $('#manufacturer_string_'+ manufacturerId).hide();
                $('#manufacturer_edit_'+ manufacturerId).hide();
                $('#manufacturer_save_'+ manufacturerId).show();
                $('#manufacturer_cancel_'+ manufacturerId).show();
                $('#manufacturer_remove_' + manufacturerId).hide();
            });
            $(document).on('click', '.manufacturer-cancel-icon', function (e){

                e.preventDefault();

                let cancelId = $(this).data('manufacturer-cancel-id');

                $('#manufacturer_edit_field_'+ cancelId).hide();
                $('#manufacturer_string_'+ cancelId).show();
                $('#manufacturer_edit_field_'+ cancelId).val($.session.get('manufacturer'));
                $('#manufacturer_edit_'+ cancelId).show();
                $('#manufacturer_save_'+ cancelId).hide();
                $('#manufacturer_cancel_'+ cancelId).hide();
                $('#error_manufacturer_'+ cancelId).hide();
            });
            $(document).on('click',' .manufacturer-save-icon', function (e){

                e.preventDefault();

                let manufacturerId = $(this).data('manufacturer-id');
                let manufacturer = $('#manufacturer_edit_field_'+ manufacturerId).val();
                let manufacturer_error = $('#error_manufacturer_'+ manufacturerId);
                let isValid = true;

                manufacturer_error.hide();

                if(manufacturer == '' || manufacturer == 'undefined'){

                    manufacturer_error.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_manufacturer_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            manufacturerId:manufacturerId,
                            manufacturer:manufacturer
                        },
                        success: function (response) {

                            $('#manufacturer_edit_field_'+ manufacturerId).hide();
                            $('#manufacturer_string_'+ manufacturerId).empty().append(manufacturer).show();
                            $('#manufacturer_edit_field_'+ manufacturerId).val(manufacturer);
                            $('#manufacturer_edit_'+ manufacturerId).show();
                            $('#manufacturer_save_'+ manufacturerId).hide();
                            $('#manufacturer_cancel_'+ manufacturerId).hide();
                            $('#error_manufacturer_'+ manufacturerId).hide();
                            $('#manufacturer_row_id_'+ manufacturerId).attr('data-manufacturer', manufacturer);
                            $('#manufacturer_badge_string_'+ manufacturerId).empty().append(manufacturer);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-manufacturer', function (){

                let manufacturerId = $(this).data('manufacturer-id');

                if($('#manufacturer_save_'+ manufacturerId).is(':hidden')) {

                    $('#manufacturer_edit_' + manufacturerId).show();

                    if(selected.includes(manufacturerId)) {

                        $('#manufacturer_remove_' + manufacturerId).show();

                    } else {

                        $('#manufacturer_remove_' + manufacturerId).hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-manufacturer', function (){

                let manufacturerId = $(this).data('manufacturer-id');

                if($('#manufacturer_save_'+ manufacturerId).is(':hidden')) {

                    $('#manufacturer_edit_' + manufacturerId).hide();
                    $('#manufacturer_remove_' + manufacturerId).hide();
                };
            });
            $(document).on('click', '.manufacturer-select', function (){

                let manufacturerId = $(this).data('manufacturer-id');
                let manufacturer = $(this).attr('data-manufacturer');

                if($('#manufacturer_edit_field_'+ manufacturerId).is(':hidden')) {

                    let hidden_field = '<input type="hidden" name="manufacturers[]" class="manufacturer-hidden" data-name="'+ manufacturer +'"';
                    hidden_field += 'id="manufacturer_hidden_field_' + manufacturerId + '" value="' + manufacturerId + '" >';

                    $('#manufacturers_list').prepend(hidden_field);
                    $(this).removeClass('manufacturer-select');
                    $('#manufacturer_remove_' + manufacturerId).show();

                    let badge = getBadges('input[name="manufacturers[]"]', 'manufacturer');

                    $('#manufacturer').empty().append(badge);

                    // Create array of selected ids
                    selected = [];

                    if($('.manufacturer-hidden').length > 0){

                        $('.manufacturer-hidden').each(function (){

                            selected.push(parseInt($(this).val()));
                        });
                    }
                }
            });
            $(document).on('click', '.manufacturer-remove-icon', function (e){

                e.preventDefault();

                let manufacturerId = $(this).data('manufacturer-id');

                $('#manufacturer_badge_'+ manufacturerId).remove();
                $('#manufacturer_row_id_'+ manufacturerId).addClass('manufacturer-select');
                $('#manufacturer_hidden_field_'+ manufacturerId).remove();
                $('#manufacturer_remove_' + manufacturerId).hide();

                // Remove from selected array
                let index = selected.indexOf(manufacturerId);
                if (index >= 0) {
                    selected.splice( index, 1 );
                }

                if($('.manufacturer-hidden').length == 0){

                    $('#manufacturer').append('Select a Manufacturer');
                };
            });
            $(document).on('mouseover', '#manufacturer_add', function (){


            });
            $(document).on('click', '#manufacturer_create_string', function (e){

                e.preventDefault();

                $('#manufacturer_create_string').hide();
                $('#manufacturer_create_field').show();
                $('.manufacturer-create-cancel-icon').show();
                $('.manufacturer-create-save-icon').show();
            });
            $(document).on('click', '.manufacturer-create-cancel-icon', function (e){

                e.preventDefault();

                $('#manufacturer_create_string').show();
                $('#manufacturer_create_field').hide();
                $('.manufacturer-create-cancel-icon').hide();
                $('.manufacturer-create-save-icon').hide();
            });
            $(document).on('click', '.manufacturer-create-save-icon', function (e){

                e.preventDefault();

                let manufacturer = $('#manufacturer_create_field').val();
                let error_manufacturer = $('#error_manufacturer_create');
                let isValid = true;

                error_manufacturer.hide();

                if(manufacturer == '' || manufacturer == 'udefined'){

                    error_manufacturer.show()
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_manufacturer_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            manufacturerId:0,
                            manufacturer:manufacturer
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#manufacturer_list_container').empty().append(response);
                            $('#manufacturer_create_string').show();
                            $('#manufacturer_create_field').hide();
                            $('.manufacturer-create-cancel-icon').hide();
                            $('.manufacturer-create-save-icon').hide();
                        }
                    });
                }
            });
            {# End Manufacturers Dropdown #}

            {# Category Dropdown #}
            {% set selected = 0 %}
            {% if product.category is not null %}
            {% set selected = product.category.id %}
            {% endif %}
            selected = {{ selected }};
            $(document).on('mousedown focus', '#category', function (e){

                toggleDropdowns('categories1');

                if(e.type == 'mousedown'){

                    $('#categories_list').slideToggle(700);
                    isCategoryClick = true;
                }

                if(!isCategoryClick){

                    $('#categories_list').show(700);
                }
            });
            $(document).on('keydown', '#category', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#categories_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.category-row:first').find('.category-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.category-select-row', function (e) {

                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-category').parent().prev().find('.category-select-row');

                    if($(this).closest('.edit-category').parent().is(':first-child')){

                        $('#category').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-category').parent().next().find('.category-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="7"]').focus();

                    // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="7"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#categories_list').hide(700);
                }
            });
            $(document).on('click', '.category-edit-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category-edit-id');
                $.session.set('category', $('#category_edit_field_'+ categoryId).val());

                $('#category_edit_field_'+ categoryId).show();
                $('#category_string_'+ categoryId).hide();
                $('#category_edit_'+ categoryId).hide();
                $('#category_save_'+ categoryId).show();
                $('#category_cancel_'+ categoryId).show();
                $('#category_remove_' + categoryId).hide();
            });
            $(document).on('click', '.category-cancel-icon', function (e){

                e.preventDefault();

                let cancelId = $(this).data('category-cancel-id');

                $('#category_edit_field_'+ cancelId).hide();
                $('#category_string_'+ cancelId).show();
                $('#category_edit_field_'+ cancelId).val($.session.get('category'));
                $('#category_edit_'+ cancelId).show();
                $('#category_save_'+ cancelId).hide();
                $('#category_cancel_'+ cancelId).hide();
                $('#error_category_'+ cancelId).hide();
            });
            $(document).on('click',' .category-save-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category-id');
                let category = $('#category_edit_field_'+ categoryId).val();
                let categoryError = $('#error_category_'+ categoryId);
                let isValid = true;

                categoryError.hide();

                if(category == '' || category == 'undefined'){

                    categoryError.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_category_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            category_id:categoryId,
                            category:category,
                            selected_category: selected
                        },
                        success: function (response) {

                            $('#category_edit_field_'+ categoryId).hide();
                            $('#category_string_'+ categoryId).empty().append(category).show();
                            $('#category_edit_field_'+ categoryId).val(category);
                            $('#category_edit_'+ categoryId).show();
                            $('#category_save_'+ categoryId).hide();
                            $('#category_cancel_'+ categoryId).hide();
                            $('#error_category_'+ categoryId).hide();
                            $('#category_row_id_'+ categoryId).attr('data-category', category);
                            $('#category_badge_string_'+ categoryId).empty().append(category);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-category', function (){

                let categoryId = $(this).data('category-id');
                selected = $('#category_id').val();

                if($('#category_save_'+ categoryId).is(':hidden')) {

                    $('#category_edit_' + categoryId).show();

                    if(selected == categoryId) {

                        $('#category_remove_' + categoryId).show();

                    } else {

                        $('#category_remove_' + categoryId).hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-category', function (){

                let categoryId = $(this).data('category-id');

                if($('#category_save_'+ categoryId).is(':hidden')) {

                    $('#category_edit_' + categoryId).hide();
                    $('#category_remove_' + categoryId).hide();
                };
            });
            $(document).on('click', '.category-select', function (){

                let category1Id = $(this).data('category-id');
                let category = $(this).attr('data-category');
                let category2Id = $('#sub_category_id').val();
                let category3Id = $('#category3_id').val();

                if($('#category_edit_field_'+ category1Id).is(':hidden')) {

                    $('#category_id').val(category1Id).attr('data-name', category);
                    $('#category_remove_' + category1Id).show();

                    let badge = getBadge('input[name="category-id"]', 'category');

                    $('#category').empty().append(badge);

                    // Selected id
                    selected = category1Id;

                    // Update seccond level category dropdown
                    $.ajax({
                        url: "{{ path('get_sub_categories') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            category1_id:category1Id,
                            category2_id: category2Id,
                        },
                        success: function (response) {

                            $('#sub_category_list_container').empty().append(response.categories2List);
                            $('#category3_list_container').empty().append(response.categories3List);

                            if(response.removeCategory2){

                                $('#sub_category_id').val(0);
                                $('#sub_category').empty().append('Select a Child Category');
                            }

                            if(response.removeCategory3){

                                $('#category3_id').val(0);
                                $('#category3').empty().append('Select a Grandchild Category');
                            }
                        }
                    });
                }
            });
            $(document).on('click', '.category-remove-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category-id');

                $('#category_badge_'+ categoryId).remove();
                $('#category_row_id_'+ categoryId).addClass('category-select');
                $('#category_hidden_field_'+ categoryId).remove();
                $('#category_remove_' + categoryId).hide();

                // Reset selected
                selected = '';
                $('#category').append('Select a category');
            });
            $(document).on('mouseover', '#category_add', function (){


            });
            $(document).on('click', '#category_create_string', function (e){

                e.preventDefault();

                $('#category_create_string').hide();
                $('#category_create_field').show();
                $('.category-create-cancel-icon').show();
                $('.category-create-save-icon').show();
            });
            $(document).on('click', '.category-create-cancel-icon', function (e){

                e.preventDefault();

                $('#category_create_string').show();
                $('#category_create_field').hide();
                $('.category-create-cancel-icon').hide();
                $('.category-create-save-icon').hide();
            });
            $(document).on('click', '.category-create-save-icon', function (e){

                e.preventDefault();

                let category = $('#category_create_field').val();
                let error_category = $('#error_category_create');
                let isValid = true;

                error_category.hide();

                if(category == '' || category == 'udefined'){

                    error_category.show()
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_category_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            categoryId:0,
                            category:category
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#category_list_container').empty().append(response);
                            $('#category_create_string').show();
                            $('#category_create_field').hide();
                            $('.category-create-cancel-icon').hide();
                            $('.category-create-save-icon').hide();
                        }
                    });
                }
            });
            {# End Category Dropdown #}

            {# Sub Category Dropdown #}
            {% set selected = '' %}
            {% if product.subCategory is not null %}
            {% set selected = product.subCategory.id %}
            {% endif %}
            selected = {{ selected }}
            $(document).on('mousedown focus', '#sub_category', function (e){

                toggleDropdowns('categories2');

                if(e.type == 'mousedown'){

                    $('#sub_category_list').slideToggle(700);
                    isCategory2Click = true;
                }

                if(!isCategory2Click){

                    $('#sub_category_list').show(700);
                }
            });
            $(document).on('keydown', '#sub_category', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#sub_category_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.sub-category-row:first').find('.sub-category-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.sub-category-select-row', function (e) {

                e.preventDefault();
                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-sub-category').parent().prev().find('.sub-category-select-row');

                    if($(this).closest('.edit-sub-category').parent().is(':first-child')){

                        $('#sub_category').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-sub-category').parent().next().find('.sub-category-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="8"]').focus();

                        // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="8"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#sub_category_list').hide(700);
                }
            });
            $(document).on('click', '.sub-category-edit-icon', function (e){

                e.preventDefault();

                let subCategory_id = $(this).data('sub-category-edit-id');
                $.session.set('subCategory', $('#subCategory_edit_field_'+ subCategory_id).val());

                $('#sub_category_edit_field_'+ subCategory_id).show();
                $('#sub_category_string_'+ subCategory_id).hide();
                $('#sub_category_edit_'+ subCategory_id).hide();
                $('#sub_category_save_'+ subCategory_id).show();
                $('#sub_category_cancel_'+ subCategory_id).show();
                $('#sub_category_remove_' + subCategory_id).hide();
            });
            $(document).on('click', '.sub-category-cancel-icon', function (e){

                e.preventDefault();

                let cancelId = $(this).data('sub-category-cancel-id');

                $('#sub_category_edit_field_'+ cancelId).hide();
                $('#sub_category_string_'+ cancelId).show();
                $('#sub_category_edit_field_'+ cancelId).val($.session.get('subCategory'));
                $('#sub_category_edit_'+ cancelId).show();
                $('#sub_category_save_'+ cancelId).hide();
                $('#sub_category_cancel_'+ cancelId).hide();
                $('#error_sub-category_'+ cancelId).hide();
            });
            $(document).on('click',' .sub-category-save-icon', function (e){

                e.preventDefault();

                let subCategoryId = $(this).data('sub-category-id');
                let subCategory = $('#sub_category_edit_field_'+ subCategoryId).val();
                let subCategoryError = $('#error_sub_category_'+ subCategoryId);
                let isValid = true;

                subCategoryError.hide();

                if(subCategory == '' || subCategory == 'undefined'){

                    subCategoryError.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_sub_category_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            sub_category_id:subCategoryId,
                            sub_category:subCategory,
                            selected_sub_category: selected
                        },
                        success: function (response) {

                            $('#sub_category_edit_field_'+ subCategoryId).hide();
                            $('#sub_category_string_'+ subCategoryId).empty().append(subCategory).show();
                            $('#sub_category_edit_field_'+ subCategoryId).val(subCategory);
                            $('#sub_category_edit_'+ subCategoryId).show();
                            $('#sub_category_save_'+ subCategoryId).hide();
                            $('#sub_category_cancel_'+ subCategoryId).hide();
                            $('#error_sub_category_'+ subCategoryId).hide();
                            $('#sub_category_row_id_'+ subCategoryId).attr('data-sub-category', subCategory);
                            $('#sub_category_badge_string_'+ subCategoryId).empty().append(subCategory);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-sub-category', function (){

                let subCategoryId = $(this).data('sub-category-id');

                if($('#sub_category_save_'+ subCategoryId).is(':hidden')) {

                    $('#sub_category_edit_' + subCategoryId).show();

                    if(selected == subCategoryId) {

                        $('#sub_category_remove_' + subCategoryId).show();

                    } else {

                        $('#sub_category_remove_' + subCategoryId).hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-sub-category', function (){

                let subCategoryId = $(this).data('sub-category-id');

                if($('#sub_category_save_'+ subCategoryId).is(':hidden')) {

                    $('#sub_category_edit_' + subCategoryId).hide();
                    $('#sub_category_remove_' + subCategoryId).hide();
                };
            });
            $(document).on('click', '.sub-category-select', function (){

                let subCategoryId = $(this).data('sub-category-id');
                let subCategory = $(this).attr('data-sub-category');

                if($('#sub_category_edit_field_'+ subCategoryId).is(':hidden')) {

                    $('#sub_category_id').val(subCategoryId).attr('data-name', subCategory);
                    $('#sub_category_remove_' + subCategoryId).show();

                    let badge = getBadge('input[name="sub-category-id"]', 'sub_category');

                    $('#sub_category').empty().append(badge);

                    // Selected id
                    selected = subCategoryId;

                    // Update the sub category3 dropdown
                    $.ajax({
                        url: "{{ path('get_categories3') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            category2_id:subCategoryId,
                        },
                        success: function (response) {

                            if(!response.displayCategories3List){

                                $('#category3_id').val(0);
                                $('#category3').empty().append('Select a Grandchild Category').hide();

                            } else {

                                $('#category3').show();
                                $('#category3_list_container').empty().append(response.categories3List);
                            }
                        }
                    });
                }
            });
            $(document).on('click', '.sub-category-remove-icon', function (e){

                e.preventDefault();

                let subCategoryId = $(this).data('sub-category-id');

                $('#sub_category_badge_'+ subCategoryId).remove();
                $('#sub_category_row_id_'+ subCategoryId).addClass('sub-category-select');
                $('#sub_category_hidden_field_'+ subCategoryId).remove();
                $('#sub_category_remove_' + subCategoryId).hide();

                // Reset selected
                selected = '';
                $('#sub_category').append('Select a Child Category');
            });
            $(document).on('mouseover', '#sub-category_add', function (){


            });
            $(document).on('click', '#sub_category_create_string', function (e){

                e.preventDefault();

                $('#sub_category_create_string').hide();
                $('#sub_category_create_field').show();
                $('.sub-category-create-cancel-icon').show();
                $('.sub-category-create-save-icon').show();
            });
            $(document).on('click', '.sub-category-create-cancel-icon', function (e){

                e.preventDefault();

                $('#sub_category_create_string').show();
                $('#sub_category_create_field').hide();
                $('.sub-category-create-cancel-icon').hide();
                $('.sub-category-create-save-icon').hide();
            });
            $(document).on('click', '.sub-category-create-save-icon', function (e){

                e.preventDefault();

                let categoryId = $('#category_id').val();
                let subCategory = $('#sub_category_create_field').val();
                let errorCategory = $('#error_category');
                let errorSubCategory = $('#error_sub-category_create');
                let isValid = true;

                errorSubCategory.hide();

                if(subCategory == '' || subCategory == 'udefined'){

                    errorSubCategory.show()
                    isValid = false;
                }

                if(categoryId == 0 || categoryId == 'undefined'){

                    errorCategory.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_category2_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'category1-id':categoryId,
                            'category2-id':0,
                            'sub-category':subCategory,
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#sub_category_list_container').empty().append(response);
                            $('#sub_category_create_string').show();
                            $('#sub_category_create_field').hide();
                            $('.sub-category-create-cancel-icon').hide();
                            $('.sub-category-create-save-icon').hide();
                        }
                    });
                }
            });
            {# End Sub Category Dropdown #}

            {# Category3 Dropdown #}
            {% set selected = 0 %}
            {% if product.category3 is not null %}
            {% set selected = product.category3.id %}
            {% else %}
            $('#category3').hide();
            {% endif %}
            selected = {{ selected }};
            $(document).on('mousedown focus', '#category3', function (e){

                toggleDropdowns('categories3');

                if(e.type == 'mousedown'){

                    $('#categories3_list').slideToggle(700);
                    isCategory3Click = true;
                }

                if(!isCategory3Click){

                    $('#categories3_list').show(700);
                }
            });
            $(document).on('keydown', '#category3', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#categories3_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.category3-row:first').find('.category3-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.category3-select-row', function (e) {

                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-category3').parent().prev().find('.category3-select-row');

                    if($(this).closest('.edit-category3').parent().is(':first-child')){

                        $('#sub_category').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                        let element = $(this).closest('.edit-category3').parent().next().find('.category3-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="8"]').focus();

                        // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="8"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#categories3_list').hide(700);
                }
            });
            $(document).on('click', '.category3-edit-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category3-edit-id');
                $.session.set('category3', $('#category3_edit_field_'+ categoryId).val());

                $('#category3_edit_field_'+ categoryId).show();
                $('#category3_string_'+ categoryId).hide();
                $('#category3_edit_'+ categoryId).hide();
                $('#category3_save_'+ categoryId).show();
                $('#category3_cancel_'+ categoryId).show();
                $('#category3_remove_' + categoryId).hide();
            });
            $(document).on('click', '.category3-cancel-icon', function (e){

                e.preventDefault();

                let cancelId = $(this).data('category3-cancel-id');

                $('#category3_edit_field_'+ cancelId).hide();
                $('#category3_string_'+ cancelId).show();
                $('#category3_edit_field_'+ cancelId).val($.session.get('category3'));
                $('#category3_edit_'+ cancelId).show();
                $('#category3_save_'+ cancelId).hide();
                $('#category3_cancel_'+ cancelId).hide();
                $('#error_category3_'+ cancelId).hide();
            });
            $(document).on('click',' .category3-save-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category3-id');
                let category3 = $('#category3_edit_field_'+ categoryId).val();
                let category3Error = $('#error_category3_'+ categoryId);
                let isValid = true;

                category3Error.hide();

                if(category3 == '' || category3 == 'undefined'){

                    category3Error.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_category_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            category3_id:categoryId,
                            category3:category3,
                            selected_category3: selected
                        },
                        success: function (response) {

                            $('#category3_edit_field_'+ categoryId).hide();
                            $('#category3_string_'+ categoryId).empty().append(category3).show();
                            $('#category3_edit_field_'+ categoryId).val(category3);
                            $('#category3_edit_'+ categoryId).show();
                            $('#category3_save_'+ categoryId).hide();
                            $('#category3_cancel_'+ categoryId).hide();
                            $('#error_category3_'+ categoryId).hide();
                            $('#category3_row_id_'+ categoryId).attr('data-category3', category3);
                            $('#category3_badge_string_'+ categoryId).empty().append(category3);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-category3', function (){

                let categoryId = $(this).data('category3-id');
                selected = $('#category3_id').val();

                if($('#category3_save_'+ categoryId).is(':hidden')) {

                    $('#category3_edit_' + categoryId).show();

                    if(selected == categoryId) {

                        $('#category3_remove_' + categoryId).show();

                    } else {

                        $('#category3_remove_' + categoryId).hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-category3', function (){

                let categoryId = $(this).data('category3-id');

                if($('#category3_save_'+ categoryId).is(':hidden')) {

                    $('#category3_edit_' + categoryId).hide();
                    $('#category3_remove_' + categoryId).hide();
                };
            });
            $(document).on('click', '.category3-select', function (){

                let categoryId = $(this).data('category3-id');
                let category3 = $(this).attr('data-category3');
                let subCategoryId = $('#sub_category3_id').val();

                if($('#category3_edit_field_'+ categoryId).is(':hidden')) {

                    $('#category3_id').val(categoryId).attr('data-name', category3);
                    $('#category3_remove_' + categoryId).show();

                    let badge = getBadge('input[name="category3-id"]', 'category3');

                    $('#category3').empty().append(badge);

                    // Selected id
                    selected = categoryId;
                }
            });
            $(document).on('click', '.category3-remove-icon', function (e){

                e.preventDefault();

                let categoryId = $(this).data('category3-id');

                $('#category3_badge_'+ categoryId).remove();
                $('#category3_row_id_'+ categoryId).addClass('category3-select');
                $('#category3_hidden_field_'+ categoryId).remove();
                $('#category3_remove_' + categoryId).hide();

                // Reset selected
                selected = '';
                $('#category3').append('Select a category3');
                $('#category3_id').attr('data-name','').val('');

            });
            $(document).on('mouseover', '#category3_add', function (){


            });
            $(document).on('click', '#category3_create_string', function (e){

                e.preventDefault();

                $('#category3_create_string').hide();
                $('#category3_create_field').show();
                $('.category3-create-cancel-icon').show();
                $('.category3-create-save-icon').show();
            });
            $(document).on('click', '.category3-create-cancel-icon', function (e){

                e.preventDefault();

                $('#category3_create_string').show();
                $('#category3_create_field').hide();
                $('.category3-create-cancel-icon').hide();
                $('.category3-create-save-icon').hide();
            });
            $(document).on('click', '.category3-create-save-icon', function (e){

                e.preventDefault();

                let category3 = $('#category3_create_field').val();
                let error_category3 = $('#error_category3_create');
                let isValid = true;

                error_category3.hide();

                if(category3 == '' || category3 == 'udefined'){

                    error_category3.show()
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_category_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            categoryId:0,
                            category3:category3
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#category3_list_container').empty().append(response);
                            $('#category3_create_string').show();
                            $('#category3_create_field').hide();
                            $('.category3-create-cancel-icon').hide();
                            $('.category3-create-save-icon').hide();
                        }
                    });
                }
            });
            {# End Category3 Dropdown #}

            {# Species Dropdown #}
            selected = [];
            array = [{{ arr_species }}];

            $(document).on('mousedown focus', '#species', function (e){

                toggleDropdowns('species');

                if(e.type == 'mousedown'){

                    $('#species_list').slideToggle(700);
                    isSpeciesClick = true;
                }

                if(!isSpeciesClick){

                    $('#species_list').show(700);
                }
            });
            $(document).on('keydown', '#species', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#species_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.species-row:first').find('.species-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.species-select-row', function (e) {

                e.preventDefault();
                let keyCode = e.keyCode || e.which;
                let speciesId = $(this).attr('data-species-id');

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-species').parent().prev().find('.species-select-row');

                    if($(this).closest('.edit-species').parent().is(':first-child')){

                        $('#species').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-species').parent().next().find('.species-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="6"]').focus();

                        // Tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="6"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#species_list').hide(700);
                }
            });
            $(document).on('click', '.species-edit-icon', function (e){

                e.preventDefault();

                let speciesId = $(this).data('species-edit-id');
                $.session.set('species', $('#species_edit_field_'+ speciesId).val());

                $('#species_edit_field_'+ speciesId).show();
                $('#species_string_'+ speciesId).hide();
                $('#species_edit_'+ speciesId).hide();
                $('#species_save_'+ speciesId).show();
                $('#species_cancel_'+ speciesId).show();
                $('#species_remove_' + speciesId).hide();
            });
            $(document).on('click', '.species-cancel-icon', function (e){

                e.preventDefault();

                let cancelId = $(this).data('species-cancel-id');

                $('#species_edit_field_'+ cancelId).hide();
                $('#species_string_'+ cancelId).show();
                $('#species_edit_field_'+ cancelId).val($.session.get('species'));
                $('#species_edit_'+ cancelId).show();
                $('#species_save_'+ cancelId).hide();
                $('#species_cancel_'+ cancelId).hide();
                $('#error_species_'+ cancelId).hide();
            });
            $(document).on('click',' .species-save-icon', function (e){

                e.preventDefault();

                let speciesId = $(this).data('species-id');
                let species = $('#species_edit_field_'+ speciesId).val();
                let speciesError = $('#error_species_'+ speciesId);
                let isValid = true;

                speciesError.hide();

                if(species == '' || species == 'undefined'){

                    speciesError.show();
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_species_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            species_id:speciesId,
                            species:species
                        },
                        success: function (response) {

                            $('#species_edit_field_'+ speciesId).hide();
                            $('#species_string_'+ speciesId).empty().append(species).show();
                            $('#species_edit_field_'+ speciesId).val(species);
                            $('#species_edit_'+ speciesId).show();
                            $('#species_save_'+ speciesId).hide();
                            $('#species_cancel_'+ speciesId).hide();
                            $('#error_species_'+ speciesId).hide();
                            $('#species_row_id_'+ speciesId).attr('data-species', species);
                            $('#species_badge_string_'+ speciesId).empty().append(species);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-species', function (){

                let speciesId = $(this).data('species-id');

                if($('#species_save_'+ speciesId).is(':hidden')) {

                    $('#species_edit_' + speciesId).show();

                    if(selected.includes(speciesId)) {

                        $('#species_remove_' + speciesId).show();

                    } else {

                        $('#species_remove_' + speciesId).hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-species', function (){

                let speciesId = $(this).data('species-id');

                if($('#species_save_'+ speciesId).is(':hidden')) {

                    $('#species_edit_' + speciesId).hide();
                    $('#species_remove_' + speciesId).hide();
                };
            });
            $(document).on('click', '.species-select', function (){

                let speciesId = $(this).data('species-id');
                let species = $(this).attr('data-species');

                if($('#species_edit_field_'+ speciesId).is(':hidden')) {

                    let hidden_field = '<input type="hidden" name="species[]" class="species-hidden" data-name="'+ species +'"';
                    hidden_field += 'id="species_hidden_field_' + speciesId + '" value="' + speciesId + '" >';

                    $('#species_list').prepend(hidden_field);
                    $(this).removeClass('species-select');
                    $('#species_remove_' + speciesId).show();

                    let badge = getBadges('input[name="species[]"]', 'species');

                    $('#species').empty().append(badge);

                    // Create array of selected ids
                    selected = [];

                    if($('.species-hidden').length > 0){

                        $('.species-hidden').each(function (){

                            selected.push(parseInt($(this).val()));
                        });
                    }
                }
            });
            $(document).on('click', '.species-remove-icon', function (e){

                e.preventDefault();

                let speciesId = $(this).data('species-id');

                $('#species_badge_'+ speciesId).remove();
                $('#species_row_id_'+ speciesId).addClass('species-select');
                $('#species_hidden_field_'+ speciesId).remove();
                $('#species_remove_' + speciesId).hide();

                // Remove from selected array
                let index = selected.indexOf(speciesId);
                if (index >= 0) {
                    selected.splice( index, 1 );
                }

                if($('.species-hidden').length == 0){

                    $('#species').append('Select a Species');
                };
            });
            $(document).on('mouseover', '#species_add', function (){


            });
            $(document).on('click', '#species_create_string', function (e){

                e.preventDefault();

                $('#species_create_string').hide();
                $('#species_create_field').show();
                $('.species-create-cancel-icon').show();
                $('.species-create-save-icon').show();
            });
            $(document).on('click', '.species-create-cancel-icon', function (e){

                e.preventDefault();

                $('#species_create_string').show();
                $('#species_create_field').hide();
                $('.species-create-cancel-icon').hide();
                $('.species-create-save-icon').hide();
                $('#error_species_create').hide();
            });
            $(document).on('click', '.species-create-save-icon', function (e){

                e.preventDefault();

                let species = $('#species_create_field').val();
                let error_species = $('#error_species_create');
                let isValid = true;

                error_species.hide();

                if(species == '' || species == 'udefined'){

                    error_species.show()
                    isValid = false;
                }

                if(isValid){

                    $.ajax({
                        url: "{{ path('products_species_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            species_id:0,
                            species:species
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#species_list_container').empty().append(response);
                            $('#species_create_string').show();
                            $('#species_create_field').hide();
                            $('.species-create-cancel-icon').hide();
                            $('.species-create-save-icon').hide();
                        }
                    });
                }
            });
            {# End Species Dropdown #}

            {# Tag Dropdown #}
            let tagsArray = {{ arrTags|raw }};
            $(document).on('submit', '#form_category2', function (e){

                e.preventDefault();

                let category = $(this).find('[name="category"]').val();
                let tag = $(this).find('.tag_hidden').length;
                let errorCategory = $(this).find('.error-category');
                let errorTag = $(this).find('.error-tag');
                let isValid = true;

                errorCategory.hide();
                errorTag.hide();

                if(category === '' || category === 'undefined'){

                    error_category2.show();
                    is_valid = false;
                }

                if(tag === 0 || tag === 'undefined'){

                    error_tag.show();
                    is_valid = false;
                }

                if(isValid) {

                    let data = new FormData(this);

                    $.ajax({
                        url: "{{ path('sub_categories_save') }}",
                        type: 'POST',
                        contentType: false,
                        processData: false,
                        cache: false,
                        timeout: 600000,
                        dataType: 'json',
                        data: data,
                        success: function (response) {

                            $('#level2_container').empty().append(response.list);
                            getFlash(response.flash);
                            $('#second_level_modal').modal('toggle');
                            category.val('');
                        }
                    });
                }
            });
            $(document).on('submit', '#form_category3', function (e){

                e.preventDefault();

                let category = $(this).find('[name="category"]').val();
                let tag = $(this).find('.tag_hidden').length;
                let errorCategory = $(this).find('.error-category');
                let errorTag = $(this).find('.error-tag');
                let isValid = true;

                errorCategory.hide();
                errorTag.hide();

                if(category === '' || category === 'undefined'){

                    errorCategory.show();
                    isValid = false;
                }

                if(tag === 0 || tag === 'undefined'){

                    errorTag.show();
                    isValid = false;
                }

                if(isValid) {

                    let data = new FormData(this);

                    $.ajax({
                        url: "{{ path('sub_categories_save') }}",
                        type: 'POST',
                        contentType: false,
                        processData: false,
                        cache: false,
                        timeout: 600000,
                        dataType: 'json',
                        data: data,
                        success: function (response) {

                            $('#level2_container').empty().append(response.list);
                            getFlash(response.flash);
                            $('#third_level_modal').modal('toggle');
                            category.val('');
                        }
                    });
                }
            });


            $(document).on('mousedown focus', '.tag', function (e){

                toggleDropdowns('tags');

                if(e.type == 'mousedown'){

                    $('.tag_list').slideToggle(700);
                    isTagClick = true;
                }

                if(!isTagClick){

                    $('.tag_list').show(700);
                }
            });
            $(document).on('keydown', '.tag', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('.tag_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.tag-row:first').find('.tag-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.tag-select-row', function (e) {

                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-tag').parent().prev().find('.tag-select-row');

                    if($(this).closest('.edit-tag').parent().is(':first-child')){

                        $('.tag').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-tag').parent().next().find('.tag-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                            $('[tabindex="15"]').focus();

                        // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="15"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('.tag_list').hide(700);
                }
            });
            $(document).on('click', '.tag-edit-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.tag-form-ctrl');
                $.session.set('tag', editField.val());

                editField.show();
                $(this).parent().prev().find('.tag_string').hide();
                $(this).hide();
                $(this).parent().find('.tag-save-icon').show();
                $(this).parent().find('.tag-cancel-icon').show();
                $(this).parent().find('.tag-remove-icon').hide();
            });
            $(document).on('click', '.tag-cancel-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.tag-form-ctrl');

                editField.hide();
                $(this).parent().prev().find('.tag_string').show();
                editField.val($.session.get('tag'));
                $(this).parent().next().find('.tag-edit-icon').show();
                $(this).parent().find('.tag-save-icon').hide();
                $(this).parent().find('.tag-cancel-icon').hide();
                $(this).parent().prev().find('.hidden_msg').hide();
            });
            $(document).on('click',' .tag-save-icon', function (e){

                e.preventDefault();

                let tagId = $(this).data('tag-id');
                let tag = $(this).parent().prev().find('.tag-form-ctrl').val();
                let tag_error = $(this).parent().prev().find('.hidden_msg').hide();
                let is_valid = true;

                tag_error.hide();

                if(tag === '' || tag === 'undefined'){

                    tag_error.show();
                    is_valid = false;
                }

                if(is_valid){

                    $.ajax({
                        url: "{{ path('categories_save_tag') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            tagId:tagId,
                            tag:tag
                        },
                        success: function () {

                            let editField = $(this).parent().prev().find('.tag-form-ctrl');

                            editField.hide();
                            $(this).parent().prev().find('.tag_string').empty().append(tag).show();
                            editField.val(tag);
                            $(this).parent().next().find('.tag-edit-icon').show();
                            $(this).parent().find('.tag-save-icon').hide();
                            $(this).parent().find('.tag-cancel-icon').hide();
                            $(this).parent().prev().attr('data-tag', tag);
                            $('#tag_badge_string_'+ tagId).empty().append(tag);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-tag', function (){

                let tagId = $(this).data('tag-id');

                if($(this).find('.tag-save-icon').is(':hidden')) {

                    $(this).find('.tag-edit-icon').show();

                    if(tagsArray.includes(tagId)) {

                        $(this).find('.tag-remove-icon').show();

                    } else {

                        $(this).find('.tag-remove-icon').hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-tag', function (){

                let tagId = $(this).data('tag-id');

                if($(this).find('.tag-save-icon').is(':hidden')) {

                    $(this).find('.tag-edit-icon').hide();
                    $(this).find('.tag-remove-icon').hide();
                }
            });
            $(document).on('click', '.tag-select', function (){

                let catId = $(this).closest('.tag-list-container').attr('data-category-id');
                {#let categoryId = catId ? catId : {{ app.request.get('categoryId') ? app.request.get('categoryId') : 0 }};#}
                let tagId = $(this).data('tag-id');
                let tag = $(this).attr('data-tag');
                let level = $(this).attr('data-level');
                let parentId = $(this).closest('.position-relative').find('.tag').data('category-id');

                if($(this).find('.tag-form-ctrl').is(':hidden')) {

                    let hidden_field = '<input type="hidden" name="tag[]" class="tag_hidden"';
                    hidden_field += ' data-name="'+ tag +'" value="' + tagId + '" >';
                    $(this).closest('.tag_list').prepend(hidden_field);
                    $(this).removeClass('tag-select');
                    $(this).next().find('.tag-remove-icon').show();

                    let badge = getBadges($(this).closest('.tag_list').find('input[name="tag[]"]'), 'tag');

                    $(this).closest('.tag_list').prev().empty().append(badge);

                    // Create array of array ids
                    tagsArray = [];
                    hiddenField = $('.tag_hidden');

                    if(hiddenField.length > 0){

                        hiddenField.each(function (){

                            tagsArray.push(parseInt($(this).val()));
                        });
                    }
                }
            });
            $(document).on('click', '.tag-remove-icon', function (e){

                e.preventDefault();

                let tagId = $(this).data('tag-id');

                $(this).closest('.tag_list').prev().find('[data-tag-id="'+ tagId +'"]').remove();
                $(this).parent().prev().addClass('tag-select');
                $(this).closest('.tag_list').find('[data-tag-hidden-id="'+ tagId +'"]').remove();
                $(this).hide();

                let count = $(this).closest('.tag_list').prev().find('.bg-disabled').length;

                if(count == 0){

                    $(this).closest('.position-relative').find('.tag').append('Select Tags');
                }

                // Remove from selected array
                let index = tagsArray.indexOf(tagId);
                if (index >= 0) {
                    tagsArray.splice( index, 1 );
                }

                if($('.tag_hidden').length === 0){

                    $('#tag').empty().append('Select a tag');
                }
            });
            $(document).on('click', '.tag-create-string', function (e){

                e.preventDefault();

                $(this).hide();
                $(this).parent().find('.tag-create-field').show();
                $(this).parent().next().find('.tag-create-cancel-icon').show();
                $(this).parent().next().find('.tag-create-save-icon').show();
            });
            $(document).on('click', '.tag-create-cancel-icon', function (e){

                e.preventDefault();

                $(this).parent().prev().find('.tag-create-string').show();
                $(this).parent().prev().find('.tag-create-field').hide();
                $(this).hide();
                $(this).parent().find('.tag-create-save-icon').hide();
            });
            $(document).on('click', '.tag-create-save-icon', function (e){

                e.preventDefault();

                let tag = $(this).parent().prev().find('.tag-create-field').val();
                let error_tag = $(this).parent().prev().find('.hidden_msg');
                let productId = {{ app.request.get('productId') ? app.request.get('productId') : 0 }};
                let is_valid = true;

                error_tag.hide();

                if(tag === '' || tag === 'undefined'){

                    error_tag.show()
                    is_valid = false;
                }

                if(is_valid){

                    let container = $('#tag_list_container');

                    $.ajax({
                        url: "{{ path('product_save_tag') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'tag-id':0,
                            'product-id': productId,
                            'tag':tag
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            container.empty().append(response);
                        }
                    });
                }
            });
            $(document).on('click', '.level2-edit', function (e){

                e.preventDefault();

                $('.level2-panel').slideUp(700);
                $('.level3-panel').slideUp(700);

                if($(this).closest('.row').next().is(':hidden')){

                    $(this).closest('.row').next().slideDown(700);
                }
            });
            $(document).on('click', '.level3-edit', function (e){

                e.preventDefault();

                $('.level3-panel').slideUp(700);

                if($(this).closest('.row').next().is(':hidden')){

                    $(this).closest('.row').next().slideDown(700);
                }
            });
            $(document).on('click', '.multi-select', function (){

                let levelId = parseInt($(this).attr('data-level'));
                let categoryId = parseInt($(this).attr('data-category-id'));

                if(categoryId > 0) {
                    $.ajax({
                        url: '/admin/category/get-tag-array/' + categoryId,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            level_id: levelId,
                            category_id: categoryId,
                        },
                        success: function (response) {

                            array = response;
                        }
                    });
                }

            });
            $(document).on('click', '.category3-modal-link', function (){

                $('#modal_category3_parent_id').attr('data-category-id', $(this).attr('data-category-id'));
                $('#modal_category3_parent_id').empty().append('Select Tags');
                $('#modal_category3_parent_id').next().find('.tag_hidden').remove();
                $('#modal_category3_parent_id').next().find('.col-10').removeClass('tag-select').addClass('tag-select');
                $('#modal_parent_category_id').val({{ app.request.get('categoryId')|default(0) }});
                array = [];
            });
            $(document).on('click', '.category2-modal-link', function (){

                $('#modal_category2_parent_id').attr('data-category-id', $(this).attr('data-category-id'));
                $('#modal_category2_parent_id').empty().append('Select Tags');
                $('#modal_category2_parent_id').next().find('.tag_hidden').remove();
                $('#modal_category2_parent_id').next().find('.col-10').removeClass('tag-select').addClass('tag-select');
                $('#modal_parent_category_id').val({{ app.request.get('categoryId')|default(0) }});
                array = [];
            });
            {# End Tag Dropdown #}

            {# Form Dropdown #}
            let selectedForm =  '{{ product.form }}';
            $(document).on('mousedown focus', '#forms', function (e){

                toggleDropdowns('forms');

                if(e.type == 'mousedown'){

                    $('#forms_list').slideToggle(700);
                    isFormClick = true;
                }

                if(!isFormClick){

                    $('#forms_list').show(700);
                }
            });
            $(document).on('keydown', '#forms', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#forms_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.forms-row:first').find('.forms-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.forms-select-row', function (e) {

                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-forms').parent().prev().find('.forms-select-row');

                    if($(this).closest('.edit-forms').parent().is(':first-child')){

                        $('#forms').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-forms').parent().next().find('.forms-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="14"]').focus();

                        // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="14"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#forms_list').hide(700);
                }
            });
            $(document).on('click', '.forms-edit-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.forms-form-ctrl');
                $.session.set('forms', editField.val());

                editField.show();
                $(this).parent().prev().find('.forms_string').hide();
                $(this).hide();
                $(this).parent().find('.forms-save-icon').show();
                $(this).parent().find('.forms-cancel-icon').show();
                $(this).parent().find('.forms-remove-icon').hide();
            });
            $(document).on('click', '.forms-cancel-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.forms-form-ctrl');

                editField.hide();
                $(this).parent().prev().find('.forms_string').show();
                editField.val($.session.get('forms'));
                $(this).parent().next().find('.forms-edit-icon').show();
                $(this).parent().find('.forms-save-icon').hide();
                $(this).parent().find('.forms-cancel-icon').hide();
                $(this).parent().prev().find('.hidden_msg').hide();
            });
            $(document).on('click',' .forms-save-icon', function (e){

                e.preventDefault();

                let formsId = $(this).data('forms-id');
                let forms = $(this).parent().prev().find('.forms-form-ctrl').val();
                let forms_error = $(this).parent().prev().find('.hidden_msg').hide();
                let is_valid = true;

                forms_error.hide();

                if(forms === '' || forms === 'undefined'){

                    forms_error.show();
                    is_valid = false;
                }

                let editField = $(this).parent().prev().find('.forms-form-ctrl');
                let btnSave = this;

                if(is_valid){

                    $.ajax({
                        url: "{{ path('form_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            formId:formsId,
                            form:forms
                        },
                        success: function () {

                            editField.hide();
                            $(btnSave).parent().prev().find('.forms_string').empty().append(forms).show();
                            editField.val(forms);
                            $(btnSave).parent().next().find('.forms-edit-icon').show();
                            $(btnSave).parent().find('.forms-save-icon').hide();
                            $(btnSave).parent().find('.forms-cancel-icon').hide();
                            $(btnSave).parent().prev().attr('data-forms', forms);
                            $('#forms_badge_string_'+ formsId).empty().append(forms);
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-forms', function (){

                let formsName = $(this).data('forms');

                if($(this).find('.forms-save-icon').is(':hidden')) {

                    if($(this).attr('data-protected') == 0){

                        $(this).find('.forms-edit-icon').show();
                    }

                    if(selectedForm == formsName) {

                        $(this).find('.forms-remove-icon').show();

                    } else {

                        $(this).find('.forms-remove-icon').hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-forms', function (){

                let formsId = $(this).data('forms-id');

                if($(this).find('.forms-save-icon').is(':hidden')) {

                    $(this).find('.forms-edit-icon').hide();
                    $(this).find('.forms-remove-icon').hide();
                }
            });
            $(document).on('click', '.forms-select', function (){

                let formsId = $(this).data('forms-id');
                let forms = $(this).attr('data-forms');

                if($(this).find('.forms-form-ctrl').is(':hidden')) {

                    let badge = '';
                    badge += '<span class="badge bg-disabled me-3 my-1" id="forms_badge_'+ formsId +'">';
                    badge += '<span  id="forms_badge_string_'+ formsId +'">' + forms + '</span>';
                    badge += '</span>';

                    $('.form_hidden').val(forms);
                    $('#forms').empty().append(badge);
                    $(this).closest('.forms-row').find('.forms-remove-icon').show();

                    selectedForm = forms;
                }
            });
            $(document).on('click', '.forms-remove-icon', function (e){

                e.preventDefault();

                $('#forms').empty().append('Select a Form');
                $('.form_hidden').val('');
                $(this).closest('.forms-row').find('.col-10').addClass('forms-select');

                selectedForm = '';
            });
            $(document).on('click', '.forms-create-string', function (e){

                e.preventDefault();

                $(this).hide();
                $(this).parent().find('.forms-create-field').show();
                $(this).parent().next().find('.forms-create-cancel-icon').show();
                $(this).parent().next().find('.forms-create-save-icon').show();
            });
            $(document).on('click', '.forms-create-cancel-icon', function (e){

                e.preventDefault();

                $(this).parent().prev().find('.forms-create-string').show();
                $(this).parent().prev().find('.forms-create-field').hide();
                $(this).hide();
                $(this).parent().find('.forms-create-save-icon').hide();
            });
            $(document).on('click', '.forms-create-save-icon', function (e){

                e.preventDefault();

                let forms = $(this).parent().prev().find('.forms-create-field').val();
                let error_forms = $(this).parent().prev().find('.hidden_msg');
                let categoryId = {{ app.request.get('categoryId') ? app.request.get('categoryId') : 0 }};
                let is_valid = true;

                error_forms.hide();

                if(forms === '' || forms === 'undefined'){

                    error_forms.show()
                    is_valid = false;
                }

                if(is_valid){

                    $.ajax({
                        url: "{{ path('form_save') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            formId:0,
                            form:forms
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            $('#forms_list_container').empty().append(response);
                        }
                    });
                }
            });
            {# End Form Dropdown #}

            {# Active Ingredient Dropdown #}
            let ingredientsArray = {{ selectedIngredients|json_encode|raw }};
            $(document).on('mousedown focus', '#ingredient', function (e){

                toggleDropdowns('ingredients');

                if(e.type == 'mousedown'){

                    $('#ingredient_list').slideToggle(700);
                    isActiveIngredientClick = true;
                }

                if(!isActiveIngredientClick){

                    $('#ingredient_list').show(700);
                }
            });
            $(document).on('keydown', '#ingredient', function(e) {

                let keyCode = e.keyCode || e.which;

                // Navigate away using tab
                if (keyCode == 9) {

                    $('#ingredient_list').hide(700);
                }

                // Navigate to first list item
                if (keyCode == 40) {

                    let element = $(this).next().find('.ingredient-row:first').find('.ingredient-select-row');

                    element.focus();
                    element.parent().addClass('select-row-hover');
                }
            });
            $(document).on('keydown', '.ingredient-select-row', function (e) {

                let keyCode = e.keyCode || e.which;

                // Navigate Up
                if (keyCode == 38) {

                    let element = $(this).closest('.edit-ingredient').parent().prev().find('.ingredient-select-row');

                    if($(this).closest('.edit-ingredient').parent().is(':first-child')){

                        $('#ingredient').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Navigate Down
                if (keyCode == 40) {

                    let element = $(this).closest('.edit-ingredient').parent().next().find('.ingredient-select-row');

                    $('.select-row-hover').removeClass('select-row-hover');
                    element.focus();
                    element.parent().addClass('select-row-hover');
                }

                // Select item with enter key
                if (keyCode == 13 || keyCode == 9) {

                    // Enter key
                    if(keyCode == 13) {

                        $(this)[0].click();
                        $('[tabindex="10"]').focus();

                        // Navigate with tab key
                    } else if(keyCode == 9) {

                        $('[tabindex="10"]').focus();
                    }

                    $('.select-row-hover').removeClass('select-row-hover');
                    $('#ingredient_list').hide(700);
                }
            });
            $(document).on('click', '.ingredient-edit-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.ingredient-form-ctrl');
                $.session.set('ingredient', editField.val());

                editField.show();
                $(this).parent().prev().find('.ingredient_string').hide();
                $(this).hide();
                $(this).parent().find('.ingredient-save-icon').show();
                $(this).parent().find('.ingredient-cancel-icon').show();
                $(this).parent().find('.ingredient-remove-icon').hide();
            });
            $(document).on('click', '.ingredient-cancel-icon', function (e){

                e.preventDefault();

                let editField = $(this).parent().prev().find('.ingredient-form-ctrl');

                editField.hide();
                $(this).parent().prev().find('.ingredient_string').show();
                editField.val($.session.get('ingredient'));
                $(this).parent().next().find('#ingredient-edit-icon').show();
                $(this).parent().find('.ingredient-save-icon').hide();
                $(this).parent().find('.ingredient-cancel-icon').hide();
                $(this).parent().prev().find('.hidden_msg').hide();
            });
            $(document).on('click',' .ingredient-save-icon', function (e){

                e.preventDefault();

                let ingredientId = $(this).data('ingredient-id');
                let ingredient = $(this).parent().prev().find('.ingredient-form-ctrl').val();
                let ingredient_error = $(this).parent().prev().find('.hidden_msg').hide();
                let productId = '{{ productId ?  app.request.get('productId') : 0 }}';
                let is_valid = true;

                ingredient_error.hide();

                if(ingredient === '' || ingredient === 'undefined'){

                    ingredient_error.show();
                    is_valid = false;
                }

                let editField = $(this).parent().prev().find('.ingredient-form-ctrl');
                let btnSave  = $(this);

                if(is_valid){

                    $.ajax({
                        url: "{{ path('products_save_active_ingredient') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'ingredient-id':ingredientId,
                            'ingredient':ingredient,
                            'product-id': '{{ productId }}',
                        },
                        beforeSend: function (){

                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function () {

                            editField.hide();
                            btnSave.parent().prev().find('.ingredient_string').empty().append(ingredient).show();
                            editField.val(ingredient);
                            btnSave.parent().next().find('.ingredient-edit-icon').show();
                            btnSave.parent().find('.ingredient-save-icon').hide();
                            btnSave.parent().find('.ingredient-cancel-icon').hide();
                            btnSave.parent().prev().attr('data-ingredient', ingredient);
                            $('#ingredient_badge_string_'+ ingredientId).empty().append(ingredient);
                            isLoading(false);

                            $('.ingredient_hidden').each(function () {

                                if($(this).attr('data-ingredient-id') == ingredientId){

                                    $(this).val(ingredient);
                                    $('#ingredient_badge_'+ ingredientId).empty().append(ingredient);
                                }
                            });
                        }
                    });
                }
            });
            $(document).on('mouseover', '.edit-ingredient', function (){

                let ingredient = $(this).data('ingredient');

                if($(this).find('.ingredient-save-icon').is(':hidden')) {

                    $(this).find('.ingredient-edit-icon').show();

                    if(ingredientsArray.includes(ingredient)) {

                        $(this).find('.ingredient-remove-icon').show();

                    } else {

                        $(this).find('.ingredient-remove-icon').hide();
                    }
                }
            });
            $(document).on('mouseout', '.edit-ingredient', function (){

                let ingredientId = $(this).data('ingredient-id');

                if($(this).find('.ingredient-save-icon').is(':hidden')) {

                    $(this).find('.ingredient-edit-icon').hide();
                    $(this).find('.ingredient-remove-icon').hide();
                }
            });
            $(document).on('click', '.ingredient-select', function (){

                let ingredientId = $(this).data('ingredient-id');
                let ingredient = $(this).attr('data-ingredient');

                if($(this).find('.ingredient-form-ctrl').is(':hidden')) {

                    let hidden_field = '<input type="hidden" name="ingredient[]" class="ingredient_hidden" data-ingredient-id="' + ingredientId + '"';
                    hidden_field += ' data-name="'+ ingredient +'" value="' + ingredient + '" id="ingredient_hidden_' + ingredientId + '" >';
                    $(this).closest('#ingredient_list').prepend(hidden_field);
                    $(this).removeClass('ingredient-select');
                    $(this).next().find('.ingredient-remove-icon').show();

                    let badge = getIngredientBadges($(this).closest('#ingredient_list').find('input[name="ingredient[]"]'), 'ingredient');

                    $(this).closest('#ingredient_list').prev().empty().append(badge);

                    // Create array of array ids
                    ingredientsArray = [];
                    hiddenField = $('.ingredient_hidden');

                    if(hiddenField.length > 0){

                        hiddenField.each(function (){

                            ingredientsArray.push($(this).val());
                        });
                    }
                }
            });
            $(document).on('click', '.ingredient-remove-icon', function (e){

                e.preventDefault();

                let ingredientId = $(this).data('ingredient-id');

                $('#ingredient_badge_'+ ingredientId).remove();
                $(this).parent().prev().addClass('ingredient-select');
                $('#ingredient_hidden_'+ ingredientId).remove();
                $(this).hide();

                // Remove from selected array
                ingredientsArray = [];
                $('.ingredient_hidden').each(function () {

                    ingredientsArray.push($(this).val());
                });

                if($('.ingredient_hidden').length === 0){

                    $('#ingredient').empty().append('Select an Active Ingredient');
                }
            });
            $(document).on('click', '.ingredient-create-string', function (e){

                e.preventDefault();

                $(this).hide();
                $(this).parent().find('.ingredient-create-field').show();
                $(this).parent().next().find('.ingredient-create-cancel-icon').show();
                $(this).parent().next().find('.ingredient-create-save-icon').show();
            });
            $(document).on('click', '.ingredient-create-cancel-icon', function (e){

                e.preventDefault();

                $(this).parent().prev().find('.ingredient-create-string').show();
                $(this).parent().prev().find('.ingredient-create-field').hide();
                $(this).hide();
                $(this).parent().find('.ingredient-create-save-icon').hide();
            });
            $(document).on('click', '.ingredient-create-save-icon', function (e){

                e.preventDefault();

                let ingredient = $(this).parent().prev().find('.ingredient-create-field').val();
                let error_ingredient = $(this).parent().prev().find('.hidden_msg');
                let productId = '{{ productId ?  app.request.get('productId') : 0 }}';
                let is_valid = true;

                error_ingredient.hide();

                if(ingredient === '' || ingredient === 'undefined'){

                    error_ingredient.show()
                    is_valid = false;
                }

                if(is_valid){

                    let container = $('#ingredient_list_container');

                    $.ajax({
                        url: "{{ path('products_save_active_ingredient') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            'ingredient-id':0,
                            'product-id': '{{ productId }}',
                            'ingredient':ingredient
                        },
                        beforeSend: function (){
                            isLoading(true);
                        },
                        complete: function(e){
                            if(e.status === 500){
                                window.location.href = '{{ path('admin_error_500') }}';
                            }
                        },
                        success: function (response) {

                            isLoading(false);
                            container.empty().append(response.list);
                            $('#ingredient_list').show();

                            let hiddenField = '';

                            $.each(response.twigArray, function (key, value) {

                                hiddenField += '<input type="hidden" name="ingredient[]" class="ingredient_hidden" data-ingredient-id="' + key + '"';
                                hiddenField += ' data-name="'+ value +'" value="' + value + '" id="ingredient_hidden_' + key + '" >';
                            });

                            $('#ingredient_list_container').append(hiddenField);
                        }
                    });
                }
            });
            {# End Active Ingredient Dropdown #}

            {# Product Images #}
            $(document).on('click', '.delete-image', function (){

                let imageId = $(this).attr('data-image-id');

                if(imageId > 0){

                    $.ajax({
                        url: "{{ path('product_delete_image') }}",
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            image_id: imageId
                        },
                        success: function (response) {

                            $('#image_'+ imageId).remove();
                            getFlash(response);

                        }
                    });
                }
            });
            {# End Product Images #}

            $(document).on('click blur', '#name, #dosage, #size, #unit, #image, #details', function () {

                toggleDropdowns('');
            });

            function toggleDropdowns(element){

                let manufacturers = $('#manufacturers_list');
                let species = $('#species_list');
                let categories1 = $('#categories_list');
                let categories2 = $('#sub_category_list');
                let categories3 = $('#categories3_list');
                let formsList = $('#forms_list');
                let tagList = $('.tag_list');
                let ingredientsList = $('#ingredient_list');

                if(element == 'manufacturers'){

                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'categories1'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'categories2'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'categories3'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'forms'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'species'){

                    manufacturers.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'tags'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    ingredientsList.hide(700);
                }

                if(element == 'ingredients'){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                }

                if(element == ''){

                    manufacturers.hide(700);
                    species.hide(700);
                    categories1.hide(700);
                    categories2.hide(700);
                    categories3.hide(700);
                    formsList.hide(700);
                    tagList.hide(700);
                    ingredientsList.hide(700);
                }
            }
        });

        function getBadges(element, label){

            let arr = [];

            $(element).each(function() {

                let val = $(this).val();
                let name = $(this).data('name');

                arr.push({'id':val, 'name': name});
            });

            let badge = '';

            for(let i = 0; i < arr.length; i++){

                badge += '<span class="badge bg-disabled me-3 my-1" id="'+ label +'_badge_'+ arr[i].id +'">';
                badge += '<span  id="'+ label +'_badge_string_'+ arr[i].id +'">' + arr[i].name + '</span>';
                badge += '</span>';
            }

            return badge;
        }
        function getIngredientBadges(element, label){

            let arr = [];

            $(element).each(function() {

                let val = $(this).attr('data-ingredient-id');
                let name = $(this).data('name');

                arr.push({'id':val, 'name': name});
            });

            let badge = '';

            for(let i = 0; i < arr.length; i++){

                badge += '<span class="badge bg-disabled me-3 my-1" id="'+ label +'_badge_'+ arr[i].id +'">';
                badge += '<span  id="'+ label +'_badge_string_'+ arr[i].id +'">' + arr[i].name + '</span>';
                badge += '</span>';
            }

            return badge;
        }
        function getBadge(element, label){

            let id = $(element).val();
            let name = $(element).attr('data-name');

            let badge = '';
            badge += '<span class="badge bg-disabled me-3 my-1" id="'+ label +'_badge_'+ id +'">';
            badge += '<span  id="'+ label +'_badge_string_'+ id +'">' + name + '</span>';
            badge += '</span>';

            return badge;
        }

        tinymce.init({
            selector: '#details',
            plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
            editimage_cors_hosts: ['picsum.photos'],
            menubar: false,
            toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist removeformat',
            toolbar_sticky: true,
            statusbar: true,
            image_advtab: true,
            link_list: [
                { title: 'My page 1', value: 'https://www.tiny.cloud' },
                { title: 'My page 2', value: 'http://www.moxiecode.com' }
            ],
            image_list: [
                { title: 'My page 1', value: 'https://www.tiny.cloud' },
                { title: 'My page 2', value: 'http://www.moxiecode.com' }
            ],
            image_class_list: [
                { title: 'None', value: '' },
                { title: 'Some class', value: 'class-name' }
            ],
            importcss_append: true,
            templates: [
                { title: 'New Table', description: 'creates a new table', content: '<div class="mceTmpl"><table width="98%%"  border="0" cellspacing="0" cellpadding="0"><tr><th scope="col"> </th><th scope="col"> </th></tr><tr><td> </td><td> </td></tr></table></div>' },
                { title: 'Starting my story', description: 'A cure for writers block', content: 'Once upon a time...' },
                { title: 'New list with dates', description: 'New List with dates', content: '<div class="mceTmpl"><span class="cdate">cdate</span><br><span class="mdate">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>' }
            ],
            template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',
            template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]',
            height: 600,
            image_caption: true,
            quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
            noneditable_class: 'mceNonEditable',
            toolbar_mode: 'sliding',
            contextmenu: 'link image table',
            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
        });
    </script>
{% endblock %}